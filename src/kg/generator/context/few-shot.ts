export interface FewShotExample {
  input: string;
  output: string;
}

export const fewShot: FewShotExample[] = [
  {
    input: "Kevin Bacon finished watching Footloose on March 1st, 2014.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:WatchAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:object <PLACEHOLDER_ENTITY_3>;",
          "  schema:actionStatus schema:CompletedActionStatus;",
          '  schema:startTime "2014-03-01"^^xsd:date .',
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Kevin Bacon" .',
          '<PLACEHOLDER_ENTITY_3> a schema:Movie; schema:name "Footloose" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:WatchAction",
            name: "Watching Footloose",
            text: "finished watching Footloose",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Kevin Bacon",
            text: "Kevin Bacon",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Movie",
            name: "Footloose",
            text: "Footloose",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Alice read the article 'The Future of AI' yesterday.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:ReadAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:object <PLACEHOLDER_ENTITY_3>;",
          "  schema:actionStatus schema:CompletedActionStatus;",
          '  schema:startTime "2024-01-15"^^xsd:date .',
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Alice" .',
          '<PLACEHOLDER_ENTITY_3> a schema:Article; schema:headline "The Future of AI" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:ReadAction",
            name: "Reading article",
            text: "read the article",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Alice",
            text: "Alice",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Article",
            name: "The Future of AI",
            text: "'The Future of AI'",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Maria ate dinner at Mama Mia's Pizza on May 5, 2024.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:EatAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:object <PLACEHOLDER_ENTITY_3>;",
          "  schema:location <PLACEHOLDER_ENTITY_4>;",
          '  schema:startTime "2024-05-05"^^xsd:date;',
          "  schema:actionStatus schema:CompletedActionStatus .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Maria" .',
          '<PLACEHOLDER_ENTITY_3> a schema:MenuItem; schema:name "Dinner" .',
          '<PLACEHOLDER_ENTITY_4> a schema:Restaurant; schema:name "Mama Mia\'s Pizza" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:EatAction",
            name: "Eating dinner",
            text: "ate dinner",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Maria",
            text: "Maria",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:MenuItem",
            name: "Dinner",
            text: "dinner",
          },
          {
            id: "PLACEHOLDER_ENTITY_4",
            type: "schema:Restaurant",
            name: "Mama Mia's Pizza",
            text: "Mama Mia's Pizza",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Tom drank a cappuccino at Central Cafe yesterday morning.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:DrinkAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:object <PLACEHOLDER_ENTITY_3>;",
          "  schema:location <PLACEHOLDER_ENTITY_4>;",
          '  schema:startTime "2024-01-15T09:00:00-07:00"^^xsd:dateTime;',
          "  schema:actionStatus schema:CompletedActionStatus .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Tom" .',
          '<PLACEHOLDER_ENTITY_3> a schema:MenuItem; schema:name "Cappuccino" .',
          '<PLACEHOLDER_ENTITY_4> a schema:CafeOrCoffeeShop; schema:name "Central Cafe" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:DrinkAction",
            name: "Drinking cappuccino",
            text: "drank a cappuccino",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Tom",
            text: "Tom",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:MenuItem",
            name: "Cappuccino",
            text: "cappuccino",
          },
          {
            id: "PLACEHOLDER_ENTITY_4",
            type: "schema:CafeOrCoffeeShop",
            name: "Central Cafe",
            text: "Central Cafe",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Bob paid $20 for his lunch.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:PayAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:object <PLACEHOLDER_ENTITY_3>;",
          '  schema:price "20.00"^^xsd:decimal;',
          '  schema:priceCurrency "USD";',
          "  schema:actionStatus schema:CompletedActionStatus .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Bob" .',
          '<PLACEHOLDER_ENTITY_3> a schema:MenuItem; schema:name "Lunch" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:PayAction",
            name: "Paying for lunch",
            text: "paid $20 for his lunch",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Bob",
            text: "Bob",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:MenuItem",
            name: "Lunch",
            text: "lunch",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Lisa checked into the Grand Hotel at 3pm on August 10, 2025.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:CheckInAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:location <PLACEHOLDER_ENTITY_3>;",
          '  schema:startTime "2025-08-10T15:00:00-07:00"^^xsd:dateTime;',
          "  schema:actionStatus schema:CompletedActionStatus .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Lisa" .',
          '<PLACEHOLDER_ENTITY_3> a schema:LodgingBusiness; schema:name "Grand Hotel" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:CheckInAction",
            name: "Checking into hotel",
            text: "checked into the Grand Hotel",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Lisa",
            text: "Lisa",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:LodgingBusiness",
            name: "Grand Hotel",
            text: "Grand Hotel",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Support sent John an email on March 2, 2025.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:EmailAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:recipient <PLACEHOLDER_ENTITY_3>;",
          '  schema:startTime "2025-03-02"^^xsd:date;',
          "  schema:actionStatus schema:CompletedActionStatus .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Organization; schema:name "Support" .',
          '<PLACEHOLDER_ENTITY_3> a schema:Person; schema:name "John" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:EmailAction",
            name: "Sending email",
            text: "sent John an email",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Organization",
            name: "Support",
            text: "Support",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Person",
            name: "John",
            text: "John",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "Alex left a review for The Matrix on Feb 1, 2024.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:ReviewAction;",
          "  schema:agent <PLACEHOLDER_ENTITY_2>;",
          "  schema:object <PLACEHOLDER_ENTITY_3>;",
          '  schema:startTime "2024-02-01"^^xsd:date;',
          "  schema:actionStatus schema:CompletedActionStatus;",
          "  schema:result <PLACEHOLDER_ENTITY_4> .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "Alex" .',
          '<PLACEHOLDER_ENTITY_3> a schema:Movie; schema:name "The Matrix" .',
          "<PLACEHOLDER_ENTITY_4> a schema:Review .",
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:ReviewAction",
            name: "Leaving review",
            text: "left a review for The Matrix",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "Alex",
            text: "Alex",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Movie",
            name: "The Matrix",
            text: "The Matrix",
          },
          {
            id: "PLACEHOLDER_ENTITY_4",
            type: "schema:Review",
            name: "Review",
            text: "review",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "City Arts Council hosts a free park concert on July 12, 2025.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:MusicEvent;",
          '  schema:name "Summer Park Concert";',
          '  schema:startDate "2025-07-12T19:00:00-07:00"^^xsd:dateTime;',
          "  schema:location <PLACEHOLDER_ENTITY_2>;",
          "  schema:organizer <PLACEHOLDER_ENTITY_3> .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Park; schema:name "Local Park" .',
          '<PLACEHOLDER_ENTITY_3> a schema:Organization; schema:name "City Arts Council" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:MusicEvent",
            name: "Summer Park Concert",
            text: "free park concert",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Park",
            name: "Local Park",
            text: "park",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Organization",
            name: "City Arts Council",
            text: "City Arts Council",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "The Warriors played a basketball game on May 1, 2025.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:SportsEvent;",
          '  schema:name "Warriors Basketball Game";',
          '  schema:startDate "2025-05-01"^^xsd:date;',
          "  schema:performer <PLACEHOLDER_ENTITY_2> .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:SportsTeam; schema:name "Warriors" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:SportsEvent",
            name: "Warriors Basketball Game",
            text: "basketball game",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:SportsTeam",
            name: "Warriors",
            text: "The Warriors",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "John reserved flight UA123 from SFO to EWR on Oct 20, 2025.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:FlightReservation;",
          '  schema:reservationId "FL123456";',
          "  schema:reservationStatus <https://schema.org/ReservationConfirmed>;",
          "  schema:underName <PLACEHOLDER_ENTITY_2>;",
          "  schema:reservationFor <PLACEHOLDER_ENTITY_3> .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Person; schema:name "John" .',
          "<PLACEHOLDER_ENTITY_3> a schema:Flight;",
          '  schema:flightNumber "UA123";',
          "  schema:departureAirport <PLACEHOLDER_ENTITY_4>;",
          "  schema:arrivalAirport <PLACEHOLDER_ENTITY_5>;",
          '  schema:departureTime "2025-10-20T08:00:00-07:00"^^xsd:dateTime;',
          '  schema:arrivalTime "2025-10-20T16:00:00-04:00"^^xsd:dateTime .',
          "",
          '<PLACEHOLDER_ENTITY_4> a schema:Airport; schema:iataCode "SFO" .',
          '<PLACEHOLDER_ENTITY_5> a schema:Airport; schema:iataCode "EWR" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:FlightReservation",
            name: "Flight reservation",
            text: "reserved flight UA123",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Person",
            name: "John",
            text: "John",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Flight",
            name: "Flight UA123",
            text: "flight UA123",
          },
          {
            id: "PLACEHOLDER_ENTITY_4",
            type: "schema:Airport",
            name: "SFO",
            text: "SFO",
          },
          {
            id: "PLACEHOLDER_ENTITY_5",
            type: "schema:Airport",
            name: "EWR",
            text: "EWR",
          },
        ],
      },
      null,
      2,
    ),
  },
  {
    input: "A European trip covered Paris and Rome in June 2025.",
    output: JSON.stringify(
      {
        turtle: [
          "@prefix schema: <https://schema.org/> .",
          "@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .",
          "",
          "<PLACEHOLDER_ENTITY_1> a schema:Trip;",
          '  schema:name "European Adventure";',
          '  schema:departureTime "2025-06-01"^^xsd:date;',
          '  schema:arrivalTime "2025-06-15"^^xsd:date;',
          "  schema:itinerary <PLACEHOLDER_ENTITY_2>, <PLACEHOLDER_ENTITY_3> .",
          "",
          '<PLACEHOLDER_ENTITY_2> a schema:Place; schema:name "Paris, France" .',
          '<PLACEHOLDER_ENTITY_3> a schema:Place; schema:name "Rome, Italy" .',
        ].join("\n"),
        variables: [
          {
            id: "PLACEHOLDER_ENTITY_1",
            type: "schema:Trip",
            name: "European Adventure",
            text: "European trip",
          },
          {
            id: "PLACEHOLDER_ENTITY_2",
            type: "schema:Place",
            name: "Paris, France",
            text: "Paris",
          },
          {
            id: "PLACEHOLDER_ENTITY_3",
            type: "schema:Place",
            name: "Rome, Italy",
            text: "Rome",
          },
        ],
      },
      null,
      2,
    ),
  },
];
